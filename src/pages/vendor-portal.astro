---
import DefaultLayout from '../layouts/DefaultLayout.astro';
import { requireAuth } from '../lib/auth';
import { db } from '../db/client';
import { listings, sales, payouts, vendors } from '../db/schema';
import { eq, and } from 'drizzle-orm';

// Authenticate vendor and get their ID
const auth = await requireAuth(Astro);
if (auth instanceof Response) return auth;
const vendorId = auth;

// Fetch vendor info
const vendor = await db.select().from(vendors).where(eq(vendors.id, vendorId)).get();

// Load vendor data
const inventory = await db.select().from(listings).where(eq(listings.vendorId, vendorId));
const soldItems = await db.select().from(sales).where(eq(sales.vendorId, vendorId));
const totalRevenue = soldItems.reduce((sum, s) => sum + s.amount, 0);
const pendingPayouts = await db
  .select()
  .from(payouts)
  .where(and(eq(payouts.vendorId, vendorId), eq(payouts.status, 'pending')));
---
<DefaultLayout title="Vendor Dashboard - Stencil">
  <!-- Profile Section -->
  <section class="flex flex-col md:flex-row items-center md:items-start bg-white p-6 rounded-lg shadow mb-10">
    <div class="flex-shrink-0 mb-4 md:mb-0 md:mr-6 text-center">
      <img
        id="vendorLogo"
        src={vendor?.logo || '/placeholder-profile.png'}
        alt="Profile Picture"
        class="h-32 w-32 rounded-full object-cover border"
      />
      <label for="logoUpload" class="block mt-3 text-sm text-blue-600 hover:underline cursor-pointer">
        Change Photo
      </label>
      <input type="file" id="logoUpload" class="hidden" accept="image/*" />
    </div>

    <div class="flex-1 w-full">
      <form id="profileForm" class="space-y-4">
        <div>
          <label class="block text-sm font-medium text-gray-600">Business Name</label>
          <input
            type="text"
            name="name"
            value={vendor?.name || ''}
            class="mt-1 w-full border rounded p-2"
          />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-600">Description</label>
          <textarea
            name="description"
            rows="3"
            class="mt-1 w-full border rounded p-2"
          >{vendor?.description || ''}</textarea>
        </div>
        <button
          type="submit"
          class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          Save Changes
        </button>
        <p id="profileMsg" class="text-sm mt-2"></p>
      </form>
    </div>
  </section>

  <!-- Stats Cards -->
  <section class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <div class="p-4 bg-white rounded shadow">
      <h3 class="text-sm font-medium text-gray-500">Inventory</h3>
      <p class="text-2xl font-bold">{inventory.length}</p>
    </div>
    <div class="p-4 bg-white rounded shadow">
      <h3 class="text-sm font-medium text-gray-500">Items Sold</h3>
      <p class="text-2xl font-bold">{soldItems.length}</p>
    </div>
    <div class="p-4 bg-white rounded shadow">
      <h3 class="text-sm font-medium text-gray-500">Total Revenue</h3>
      <p class="text-2xl font-bold">${totalRevenue.toFixed(2)}</p>
    </div>
    <div class="p-4 bg-white rounded shadow">
      <h3 class="text-sm font-medium text-gray-500">Pending Payouts</h3>
      <p class="text-2xl font-bold">{pendingPayouts.length}</p>
    </div>
  </section>

  <!-- Inventory Table -->
  <section>
    <div class="flex items-center justify-between mb-4">
      <h2 class="text-xl font-semibold">Your Inventory</h2>
      <a href="/add-listing" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Add New Listing</a>
    </div>
    <div class="overflow-x-auto bg-white rounded shadow">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Name</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Price</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
            <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">Actions</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          {inventory.map((item) => (
            <tr key={item.id}>
              <td class="px-6 py-4 whitespace-nowrap">{item.name}</td>
              <td class="px-6 py-4 whitespace-nowrap">${item.price.toFixed(2)}</td>
              <td class="px-6 py-4 whitespace-nowrap">{item.status}</td>
              <td class="px-6 py-4 whitespace-nowrap text-right space-x-2">
                <a href={`/edit-listing/${item.id}`} class="text-blue-600 hover:underline">Edit</a>
                <button
                  onClick={async () => {
                    await fetch(`/api/listings/${item.id}`, { method: 'DELETE' });
                    location.reload();
                  }}
                  class="text-red-600 hover:underline"
                >
                  Remove
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </section>

  <script is:inline>
    const form = document.getElementById('profileForm');
    const msg = document.getElementById('profileMsg');
    const logoUpload = document.getElementById('logoUpload');
    const logoImg = document.getElementById('vendorLogo');

    // Update profile info
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      msg.textContent = 'Saving...';
      const data = Object.fromEntries(new FormData(form).entries());
      const res = await fetch('/api/vendor-portal/profile', {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });
      msg.textContent = res.ok ? '✅ Profile updated successfully.' : '❌ Error updating profile.';
    });

    // Upload logo
    logoUpload.addEventListener('change', async (e) => {
      const file = e.target.files[0];
      if (!file) return;
      msg.textContent = 'Uploading image...';
      const formData = new FormData();
      formData.append('file', file);

      try {
        const uploadRes = await fetch('/api/vendor-portal/upload-logo', {
          method: 'POST',
          body: formData,
        });
        if (!uploadRes.ok) throw new Error('Upload failed');
        const { url } = await uploadRes.json();
        logoImg.src = url;
        msg.textContent = '✅ Image uploaded! Saving...';

        await fetch('/api/vendor-portal/profile', {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ logo: url }),
        });
        msg.textContent = '✅ Profile photo updated!';
      } catch (err) {
        console.error('Image upload failed:', err);
        msg.textContent = '❌ Image upload failed.';
      }
    });
  </script>
</DefaultLayout>
